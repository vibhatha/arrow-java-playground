<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.arrow.playground</groupId>
  <artifactId>arrow-java-playground</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>

  <name>arrow-java-playground</name>

  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <arrow.version>13.0.0</arrow.version>
  </properties>


  <dependencies>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-vector</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-memory-core</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-memory-netty</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-compression</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.arrow/arrow-compression -->
  <dependency>
    <groupId>org.apache.arrow</groupId>
    <artifactId>arrow-compression</artifactId>
    <version>13.0.0</version>
  </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <version>1.21</version>
    </dependency>


    <!-- SLF4J API -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.32</version> <!-- use the latest version -->
    </dependency>

    <!-- Logback logging implementation for SLF4J -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.6</version> <!-- use the latest version -->
    </dependency>

    <!-- Apache Commons CLI -->
    <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.4</version>  <!-- Use the latest version -->
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.8.0</version>
    </dependency>

    <dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.10.1</version>
		</dependency>

    <!--Java-Python Dependencies-->
    <dependency>
        <groupId>org.apache.arrow</groupId>
        <artifactId>arrow-memory</artifactId>
        <version>${arrow.version}</version>
        <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-vector</artifactId>
      <version>${arrow.version}</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-c-data</artifactId>
      <version>${arrow.version}</version>
      <type>jar</type>
    </dependency>

    <!--Java-Cpp Dependencies-->
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>javacpp</artifactId>
      <version>1.5.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-format</artifactId>
      <version>${arrow.version}</version>
    </dependency>
  </dependencies>

  <build>
  <plugins>
    <!-- Other plugins -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>3.0.0-M6</version>
      <configuration>
        <argLine>--add-opens=java.base/java.nio=ALL-UNNAMED</argLine>
      </configuration>
    </plugin>

    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-shade-plugin</artifactId>
      <version>3.2.4</version> <!-- Use the latest version -->
      <executions>
        <execution>
          <phase>package</phase>
          <goals>
            <goal>shade</goal>
          </goals>
          <configuration>
            <transformers>
              <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                <mainClass>io.arrow.playground.HelloArrowJava</mainClass>
              </transformer>
            </transformers>
            <argLine>--add-opens=java.base/java.nio=ALL-UNNAMED</argLine>
          </configuration>
        </execution>
      </executions>
    </plugin>


    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <release>11</release> <!-- or your JDK version -->
        </configuration>
        <executions>
          <execution>
            <id>generate-native-headers</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <compilerArgs>
                <arg>-h</arg>
                <arg>${project.basedir}/src/main/cpp</arg>
              </compilerArgs>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Your native-maven-plugin without the javah goal -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>1.0-alpha-9</version>
        <executions>
          <execution>
            <id>javah</id>
            <phase>compile</phase>
            <goals>
              <goal>initialize</goal>
              <goal>compile</goal>
              <goal>link</goal>
            </goals>
          </execution>
        </executions>
        <!-- ... existing configuration ... -->
        <configuration>
          <javahOS>linux</javahOS>
          <compilerStartOptions>
            <compilerStartOption>-I/home/asus/software/jdk-11.0.1/include</compilerStartOption>
            <compilerStartOption>-I/home/asus/software/jdk-11.0.1/include/linux</compilerStartOption>
            <compilerStartOption>-I/home/asus/mambaforge/envs/pyarrow-dev/include</compilerStartOption>
            <compilerStartOption>-fPIC</compilerStartOption>
          </compilerStartOptions>
          <javahProvider>default</javahProvider>
          <javahOutputDirectory>${project.basedir}/src/main/cpp</javahOutputDirectory>
          <javahOutputFileNames>
            <javahOutputFileName>io_arrow_playground_cpp_NativeExample.h</javahOutputFileName>
            <javahOutputFileName>io_arrow_playground_cpp_MapValues.h</javahOutputFileName>
          </javahOutputFileNames>
          <javahClassNames>
            <javahClassName>io.arrow.playground.cpp.NativeExample</javahClassName>
            <javahClassName>io.arrow.playground.cpp.MapValues</javahClassName>
          </javahClassNames>
          <compilerProvider>generic-classic</compilerProvider>
          <compilerExecutable>gcc</compilerExecutable>
          <sources>
            <source>
              <directory>${project.basedir}/src/main/cpp</directory>
              <fileNames>
                <fileName>NativeExample.cpp</fileName>
                <fileName>MapValues.cpp</fileName>
              </fileNames>
            </source>
          </sources>
          <link>
            <option>-shared</option>
          </link>
          <linkerOutputDirectory>target</linkerOutputDirectory>
          <linkerExecutable>gcc</linkerExecutable>
          <!-- linker options -->
          <linkerStartOptions>
            <linkerStartOption>-m64</linkerStartOption>
            <linkerStartOption>-shared</linkerStartOption>
            <linkerStartOption>-L/home/asus/mambaforge/envs/pyarrow-dev/lib</linkerStartOption>
            <linkerStartOption>-larrow</linkerStartOption>
          </linkerStartOptions>
          <linkerEndOptions>
            <linkerEndOption>
              -o ${project.build.directory}/libArrowCpp.so
            </linkerEndOption>
            <linkerStartOption>-lstdc++</linkerStartOption>
          </linkerEndOptions>
        </configuration>
      </plugin>
  </plugins>
</build>

</project>
